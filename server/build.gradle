import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'com.flipkart.varadhi.java-application-conventions'
}


dependencies {

    implementation(project(':common'))
    implementation(project(':core'))
    implementation(project(':messaging'))
    implementation(project(':entities'))
    //TODO::Fix it server shouldn't take a dependency on pulsar implementation
    implementation(project(':pulsar'))

    implementation('org.apache.logging.log4j:log4j-slf4j2-impl')
    implementation('org.apache.logging.log4j:log4j-core')

    implementation('com.fasterxml.jackson.core:jackson-databind')

    implementation("io.vertx:vertx-core")
    implementation("io.vertx:vertx-config")
    implementation("io.vertx:vertx-config-yaml")
    implementation("io.vertx:vertx-web")
    implementation("io.vertx:vertx-auth-common")
    implementation("io.vertx:vertx-auth-jwt")
    implementation("io.vertx:vertx-opentelemetry")
    implementation("io.vertx:vertx-micrometer-metrics")

    // TODO: check why still getting warning on class not found.
    if (DefaultNativePlatform.getCurrentOperatingSystem().isMacOsX()) {
        runtimeOnly('io.netty:netty-resolver-dns-native-macos')
    }

    implementation("io.opentelemetry:opentelemetry-sdk")
    implementation("io.opentelemetry:opentelemetry-exporter-logging")
    implementation("io.opentelemetry:opentelemetry-exporter-otlp")
    implementation("io.opentelemetry:opentelemetry-semconv")

    implementation("io.micrometer:micrometer-registry-otlp")
    implementation("io.micrometer:micrometer-registry-jmx")

    //For ZK persistence, curator-framework.
    implementation('org.apache.curator:curator-framework:5.5.0')

    testImplementation("io.vertx:vertx-junit5")

    testE2EImplementation("javax.ws.rs:javax.ws.rs-api")
    testE2EImplementation("org.glassfish.jersey.core:jersey-client")
    testE2EImplementation("org.glassfish.jersey.media:jersey-media-json-jackson")
}

application {
    mainClass = 'com.flipkart.varadhi.Server'
}

