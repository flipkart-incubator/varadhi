volumes:
  pulsarconf:
  pulsardata:
  zkdata:
  zklogs:
  zkdatalog:

networks:
  hostnet:
    ipam:
      driver: default

services:
  server:
    image: varadhi.docker.registry/varadhi:latest
    container_name: server
    profiles: [ "test", "service" ]
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/jacoco/org.jacoco.agent-runtime.jar=destfile=/jacoco/testE2E.exec
      - ZOOKEEPER_SERVERS=zookeeper:2181
      - PULSAR_URL=http://pulsar:8080
    networks:
      hostnet:
    ports:
      - 18488:18488
      - 9990:9990
    volumes:
      - ../../server/build/jacoco:/jacoco
    restart: "no"
    healthcheck:
      test: curl -s http://localhost:18488/v1/health-check | grep iam_ok
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    depends_on:
      pulsar:
        condition: service_healthy
      zookeeper:
        condition: service_healthy

  pulsar:
    image: apachepulsar/pulsar:3.0.0
    container_name: pulsar
    profiles: [ "test", "dev", "pulsar" , "dev-metric"]
    networks:
      hostnet:
    ports:
      - "8080:8080"
      - "6650:6650"
    volumes:
      - pulsarconf:/pulsar/conf
      - pulsardata:/pulsar/data
    command: bin/pulsar standalone
    restart: "no"
    healthcheck:
      test: ./bin/pulsar-admin tenants list
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 1m


  zookeeper:
    image: zookeeper:3.7.1
    container_name: zookeeper
    environment:
      ZOO_4LW_COMMANDS_WHITELIST: "*"
      ZOO_ADMINSERVER_ENABLED: false
    profiles: [ "test", "dev", "zk" , "dev-metric"]
    networks:
      hostnet:
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    volumes:
      - zkdata:/data
      - zklogs:/logs
      - zkdatalog:/datalog
    restart: "no"
    healthcheck:
      test: echo ruok | nc localhost 2181 | grep imok
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s

  otel-collector:
    image: otel/opentelemetry-collector:0.110.0
    profiles: [ "otel", "dev-metric"]
    container_name: otel-collector
    networks:
      hostnet:
    ports:
      - 4318:4318 # OTLP http receiver
      - 8889:8889 # Promentheus exporter metrics
    volumes:
      - ./configs/otel-collector.yml:/etc/config.yml
    command: ["--config=/etc/config.yml"]
    restart: "no"
