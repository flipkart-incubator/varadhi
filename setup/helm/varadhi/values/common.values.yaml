# Base values

clusterDomain: cluster.local

images:
  pullPolicy: IfNotPresent
  appImage:
    registry: varadhi.docker.registry
    repository: varadhi
    tag: latest

deployment:
  name: server
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
  podAnnotations: { }
  podSecurityContext: { }
  terminationGracePeriodSeconds: 5
  dnsSettings:
  probes:
  securityContext:
    runAsNonRoot: true
    runAsUser: 10222
    capabilities:
      add:
        - NET_ADMIN
  resources:
    requests:
      memory: 500Mi
      cpu: 500m
    limits:
      memory: 500Mi
      cpu: 500m
  service:
    annotations:
    frontendPort: 8888

#############################################################################
#  Config Settings for respective Varadhi components and their dependencies
############################################################################

####################################################
# Varadhi app -- Server (rest api + producer) config
####################################################

varadhi:
  app:
    name: server
    configMapName: server
    debug: true
    restOptions:
      deployedRegion: "default"
      defaultOrg: "default"
      defaultTeam: "public"
      defaultProject: "public"
    producerOptions:
      producerCacheBuilderSpec: ""
      topicCacheBuilderSpec: ""
      metricEnabled: true
    vertxOptions:
      eventLoopPoolSize: 1
      workerPoolSize: 1
      internalBlockingPoolSize: 1
    verticleDeploymentOptions:
      instances: 1
      worker: false
      workerPoolSize: 2
    deliveryOptions:
      timeoutMs: 1000
      tracingPolicy: "PROPAGATE"
    httpServerOptions:
      port: 18488
      alpnVersions: [ "HTTP_1_1", "HTTP_2" ]
      decompressionSupported: false
      useAlpn: true
    authenticationEnabled: false
    authentication:
      jwt:
        jwksUrl: "http://localhost:9090/default/jwks"
        options:
          issuer: "http://localhost:9090/default"
          ignoreExpiration: true
    authorizationEnabled: true
    authorization:
      superUsers: [ "thanos" ]
      providerClassName: "com.flipkart.varadhi.auth.DefaultAuthorizationProvider"
    messagingStackOptions:
      providerClassName: "com.flipkart.varadhi.pulsar.PulsarStackProvider"
    metaStoreOptions:
      providerClassName: "com.flipkart.varadhi.db.ZookeeperProvider"
    featureFlags:
      leanDeployment: false
    controller:
      maxConcurrentOps: 2
      maxRetryAllowed: 3
      retryIntervalInSeconds: 10
      retryMinBackoffInSeconds: 10
      retryMaxBackOffInSeconds: 60
    member:
      roles: [ "Server", "Controller" ]
      cpuCount: 1
      networkMBps: 100
    ports:
      jmx: 9990
      jvmDebug: 5005

#############################################
# Varadhi Server logging config
#############################################
logging:
  configMapName: logging
  level: info

#############################################
# Metastore config -- zookeeper
#############################################
metastore:
  configMapName: metastore
  zookeeper:
    connectUrl: "http://host.docker.internal:2181"
    sessionTimeoutMs: 60000
    connectTimeoutMs: 2000

#############################################
# Messaging stack config - pulsar
#############################################
messaging:
  configMapName: messaging
  pulsar:
    adminOptions:
      serviceHttpUrl: "http://host.docker.internal:8080"
      connectionTimeoutMs: 2000
      readTimeoutMs: 2000
      requestTimeoutMs: 2000
    clientOptions:
      serviceUrl: "http://host.docker.internal:8080"
      keepAliveIntervalSecs: 30                     # Pulsar default (30 secs)
      ioThreads: 2                                  # start with 2, might need further tuning (Pulsar default is 1).
      connectionsPerBroker: 1                       # Pulsar default is 1.
      maxConcurrentLookupRequests: 5000             # Pulsar default is 5000.
      maxLookupRequests: 50000                      # Pulsar default is 50000.
      maxLookupRedirects: 20                        # Pulsar default is 20.
      maxNumberOfRejectedRequestPerConnection: 50   # Pulsar default is 50.
      memoryLimit: 0                                # Pulsar default is no limit (0).
      operationTimeoutMs: 2000                      # keep it low to fail fast. Pulsar default is 30 Secs.
      connectionTimeoutMs: 2000                     # keep it low to fail fast. Pulsar default is 10 Secs.
      lookupTimeoutMs: 10000                        # 5 times operationTimeout
      initialBackoffIntervalMs: 500                 # some random value.
      maxBackoffIntervalMs: 100                     # half of operationTimeoutMs.

#############################################
# Authz provider config
#############################################
authzProvider:
  configMapName: authorization

#############################################
# OTEL config
#############################################
otlpConfig:
  otlp.url: "http://host.docker.internal:4318/v1/metrics"
  otlp.step: "20s"
  otlp.aggregationTemporality: "CUMULATIVE"
  otlp.resourceAttributes:
  otlp.headers:
